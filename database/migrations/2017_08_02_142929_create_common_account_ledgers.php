<?php

use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class CreateCommonAccountLedgers extends Migration
{

    /**
     * Run the migrations.
     *
     * @return void
     */
    public $tableName = 'common_account_ledgers';
    public $connect   = 'mysql_zenon';

    public function up() {
        Schema::connection($this->connect)->create($this->tableName, function(Blueprint $table) {
            $table->increments("id");
            $table->integer("record_code");
            $table->integer("prefecture_code");
            $table->integer("organization_code");
            $table->integer("store_number")->index();
            $table->integer("customer_number")->index();
            $table->integer("subject_code")->index();
            $table->double("account_number")->index();
            $table->integer("contract_number")->index();
            $table->integer("balance_deed_state");
            $table->integer("account_state_1_001");
            $table->integer("account_state_1_002");
            $table->integer("account_state_1_003");
            $table->integer("account_state_1_004");
            $table->integer("account_state_1_005");
            $table->integer("account_state_1_006");
            $table->integer("account_state_1_007");
            $table->integer("account_state_1_008");
            $table->integer("account_state_1_009");
            $table->integer("account_state_1_010");
            $table->integer("account_state_1_011");
            $table->integer("account_state_1_012");
            $table->integer("account_state_1_013");
            $table->integer("account_state_1_014");
            $table->integer("account_state_1_015");
            $table->integer("account_state_1_016");
            $table->integer("account_state_1_017");
            $table->integer("account_state_1_018");
            $table->integer("account_state_1_019");
            $table->integer("account_state_1_020");
            $table->integer("account_state_1_021");
            $table->integer("account_state_1_022");
            $table->integer("account_state_1_023");
            $table->integer("account_state_1_024");
            $table->integer("account_state_1_025");
            $table->integer("account_state_1_026");
            $table->integer("account_state_1_027");
            $table->integer("account_state_1_028");
            $table->integer("account_state_1_029");
            $table->integer("account_state_1_030");
            $table->integer("account_state_1_031");
            $table->integer("account_state_1_032");
            $table->integer("account_state_2_001");
            $table->integer("account_state_2_002");
            $table->integer("account_state_2_003");
            $table->integer("account_state_2_004");
            $table->integer("account_state_2_005");
            $table->integer("account_state_2_006");
            $table->integer("account_state_2_007");
            $table->integer("account_state_2_008");
            $table->integer("account_state_2_009");
            $table->integer("account_state_2_010");
            $table->integer("account_state_2_011");
            $table->integer("account_state_2_012");
            $table->integer("account_state_2_013");
            $table->integer("account_state_2_014");
            $table->integer("account_state_2_015");
            $table->integer("account_state_2_016");
            $table->integer("account_state_2_017");
            $table->integer("account_state_2_018");
            $table->integer("account_state_2_019");
            $table->integer("account_state_2_020");
            $table->integer("account_state_2_021");
            $table->integer("account_state_2_022");
            $table->integer("account_state_2_023");
            $table->integer("account_state_2_024");
            $table->integer("account_state_2_025");
            $table->integer("account_state_2_026");
            $table->integer("account_state_2_027");
            $table->integer("account_state_2_028");
            $table->integer("account_state_2_029");
            $table->integer("account_state_2_030");
            $table->integer("account_state_2_031");
            $table->integer("account_state_2_032");
            $table->integer("account_state_3_001");
            $table->integer("account_state_3_002");
            $table->integer("account_state_3_003");
            $table->integer("account_state_3_004");
            $table->integer("account_state_3_005");
            $table->integer("account_state_3_006");
            $table->integer("account_state_3_007");
            $table->integer("account_state_3_008");
            $table->integer("account_state_3_009");
            $table->integer("account_state_3_010");
            $table->integer("account_state_3_011");
            $table->integer("account_state_3_012");
            $table->integer("account_state_3_013");
            $table->integer("account_state_3_014");
            $table->integer("account_state_3_015");
            $table->integer("account_state_3_016");
            $table->integer("attention_code_1_001");
            $table->integer("attention_code_1_002");
            $table->integer("attention_code_1_003");
            $table->integer("attention_code_1_004");
            $table->integer("attention_code_1_005");
            $table->integer("attention_code_1_006");
            $table->integer("attention_code_1_007");
            $table->integer("attention_code_1_008");
            $table->integer("attention_code_1_009");
            $table->integer("attention_code_1_010");
            $table->integer("attention_code_1_011");
            $table->integer("attention_code_1_012");
            $table->integer("attention_code_1_013");
            $table->integer("attention_code_1_014");
            $table->integer("attention_code_1_015");
            $table->integer("attention_code_1_016");
            $table->integer("attention_code_2_001");
            $table->integer("attention_code_2_002");
            $table->integer("attention_code_2_003");
            $table->integer("attention_code_2_004");
            $table->integer("attention_code_2_005");
            $table->integer("attention_code_2_006");
            $table->integer("attention_code_2_007");
            $table->integer("attention_code_2_008");
            $table->integer("attention_code_2_009");
            $table->integer("attention_code_2_010");
            $table->integer("attention_code_2_011");
            $table->integer("attention_code_2_012");
            $table->integer("attention_code_2_013");
            $table->integer("attention_code_2_014");
            $table->integer("attention_code_2_015");
            $table->integer("attention_code_2_016");
            $table->integer("attention_code_3_001");
            $table->integer("attention_code_3_002");
            $table->integer("attention_code_3_003");
            $table->integer("attention_code_3_004");
            $table->integer("attention_code_3_005");
            $table->integer("attention_code_3_006");
            $table->integer("attention_code_3_007");
            $table->integer("attention_code_3_008");
            $table->integer("attention_code_3_009");
            $table->integer("attention_code_3_010");
            $table->integer("attention_code_3_011");
            $table->integer("attention_code_3_012");
            $table->integer("attention_code_3_013");
            $table->integer("attention_code_3_014");
            $table->integer("attention_code_3_015");
            $table->integer("attention_code_3_016");
            $table->date("account_created_on")->nullable();
            $table->date("last_traded_on")->nullable();
            $table->date("last_handled_on")->nullable();
            $table->integer("taxation_code")->index();
            $table->integer("bankbook_deed_code")->index();
            $table->double("marugen_application_amount");
            $table->double("maruyu_balance");
            $table->integer("category_code")->index();
            $table->integer("product_code")->index();
            $table->integer("handle_type")->index();
            $table->integer("auto_continuous_code")->index();
            $table->integer("fixed_bankbook_deed_state")->index();
            $table->integer("adjustment_code")->index();
            $table->integer("assist_product_code")->index();
            $table->double("monthly_cumulation");
            $table->double("year_cumulation_1");
            $table->double("year_cumulation_2");
            $table->double("monthly_overdraft_cumulation");
            $table->double("year_overdraft_cumulation_1");
            $table->double("year_overdraft_cumulation_2");
            $table->integer("record_state_1");
            $table->integer("record_state_2");
            $table->integer("card_issue_state");
            $table->integer("small_store_number")->index();
            $table->integer("bankbook_deed_type");
            $table->double("interest_expense");
            $table->double("interest_income_tax");
            $table->integer("interest_income_national_tax");
            $table->integer("interest_income_local_tax");
            $table->double("settlement_interest");
            $table->integer("settlement_interest_national_tax");
            $table->integer("settlement_interest_local_tax");
            $table->double("balance_before_settlement");
            $table->date("settlement_on")->nullable();
            $table->double("consolidated_account_interest");
            $table->double("special_current_settlement_interest");
            $table->date("previous_settlement_on")->nullable();
            $table->double("uncollected_interest");
            $table->double("unpaid_interest");
            $table->double("corrected_profit_compensation");
            $table->integer("account_management_store_number");
            $table->integer("previous_prefecture_code");
            $table->char("common_spare_1", 3);
            $table->integer("monthly_id")->index();
            $table->timestamps("");
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down() {
        if (Schema::connection($this->connect)->hasTable($this->tableName))
        {
            Schema::connection($this->connect)->drop($this->tableName);
        }
    }

}
